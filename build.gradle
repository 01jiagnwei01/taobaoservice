import org.gradle.plugins.ide.eclipse.model.Facet
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8
webAppDirName = 'WebContent'    // 设置 WebApp 根目录
[compileJava,compileTestJava,javadoc]*.options*.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
	//compile 'jstl:jstl:1.2'
	
	compile 'log4j:log4j:1.2.17'
	 
	compile 'org.springframework:spring-webmvc:4.1.2.RELEASE'
	compile 'org.springframework:spring-tx:4.1.2.RELEASE'
	compile 'org.springframework:spring-aop:4.1.2.RELEASE'
	compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
	compile 'org.springframework.security:spring-security-config:3.2.5.RELEASE'
	compile 'org.springframework:spring-jdbc:4.1.2.RELEASE'
	compile 'org.springframework.batch:spring-batch-core:3.0.2.RELEASE'
	compile 'org.springframework:spring-orm:4.1.2.RELEASE'
	//jackson
	compile 'org.codehaus.jackson:jackson-mapper-lgpl:1.9.13'
	compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
	compile 'com.fasterxml.jackson.core:jackson-core:2.4.3'
	//common
	compile 'commons-dbcp:commons-dbcp:1.4'
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	//aspect
	compile 'aspectj:aspectjweaver:1.5.4'
	//json-lib
	//compile 'net.sf.json-lib:json-lib:2.4'
	//compile 'net.sf.ezmorph:ezmorph:1.0.6'

	
	//hibernate
	compile 'org.hibernate:hibernate-core:4.3.7.Final'
	//compile 'org.hibernate:hibernate-annotations:3.5.6-Final'
	//compile 'org.hibernate:hibernate-commons-annotations:3.3.0.ga'
	//mysql
	compile 'mysql:mysql-connector-java:5.1.34'
	//javamail
	compile 'javax.mail:mail:1.4.7'
	
	compile "org.apache.httpcomponents:httpclient:4.2.2"
	compile 'javax.servlet:jstl:1.2'  
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
	//providedCompile 'javax.servlet:servlet-api:2.5'
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	//providedRuntime 'javax.servlet:jstl:1.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile 'org.springframework:spring-test:4.1.2.RELEASE'
}

test {
    systemProperties 'property': 'value'
}
 
//eclipse.classpath.defaultOutputDir=file("${project.projectDir}/src/main/webapp/WEB-INF/classes");
eclipse.classpath.defaultOutputDir=file("${project.projectDir}/WebContent/WEB-INF/classes");
eclipse {
	project {
		natures += ['org.eclipse.wst.jsdt.core.jsNature' ,'com.sysdeo.eclipse.tomcat.tomcatnature']
		buildCommand 'org.eclipse.wst.jsdt.core.javascriptValidator'
		buildCommand 'org.eclipse.jdt.core.javabuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder' 
	}
	wtp {
		component {
			//resource sourcePath: 'extra/resource', deployPath: 'deployment/resource'
			//property name: 'java-output-path', value: "/${project.name}/src/main/webapp/WEB-INF/classes"
			
		}
		facet {
			facet name: 'wst.jsdt.web', type: Facet.FacetType.fixed
			facet name: 'jst.web', type: Facet.FacetType.fixed
			facet name: 'java', type: Facet.FacetType.fixed
			facet name: 'java', version: '1.8'
			facet name: 'jst.web', version: '3.0'
			facet name: 'wst.jsdt.web', version: '1.0'
		}
		 
	}
	jdt {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
   
	}
}
/***/
eclipse.classpath.file.withXml {
		def node = it.asNode();
		
//		node.children().removeAll() { c ->
//			def path = c.attribute('path');
//			  if(path !=null && path.toString().contains("GROOVY_SUPPORT"))return true;
//		}
//		for (Node n : node.children()) {
//			if ("lib".equals(n.attribute("kind"))) {
//				def node_attributes = new Node(n, "attributes");
//				def map = new HashMap();
//				map.put("name", "org.eclipse.jst.component.dependency");
//				map.put("value", "/WEB-INF/lib");
//				def node_attribute = new Node(node_attributes, "attribute", map);
//			}
//		}
	}
eclipse.classpath.file.beforeMerged  {classpath ->
	//println classpath;
}
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
/**
 println "1："+project.name
 println "2："+project.path
 println "3："+project.projectDir
 println "4："+project.buildDir
 println "5："+project.group
 def dest = "dest=="
 println "6：新定义变量为："+dest
 */
 //  getter method
 //	println project.buildDir
 //	println getProject().getBuildDir()
 //setter method
 //project.buildDir = 'target'
 //getProject().setBuildDir('target')
 //test.systemProperty('some.prop', 'value')
 
 //file($buildDir)
 //compileJava.destinationDir = file("$buildDir/output/classes")
 // 设置 Project Facets
 //println  "编译后的绝对路径"+file("$buildDir")
 
 /**
 task show << {
	 println relativePath(compileJava.destinationDir)
	 println relativePath(processResources.destinationDir)
 }
 sourceSets {
	 main {
		 java {
			 srcDir 'src/main/java'
		 }
		 resources {
			 srcDir 'src/main/resources'
		 }
	 }
 }
 println "java plugin  目录属性"
 println  "reportsDir:"+reportsDir
 println "testResultsDirName:"+testResultsDirName;
 
 
 println "testResultsDir:"+testResultsDir;
 println "testReportDirName:"+testReportDirName;
 println "testReportDir:"+testReportDir;
 println "libsDirName:"+libsDirName;
 println "libsDir:"+libsDir;
 println "distsDirName:"+distsDirName;
 println "distsDir:"+distsDir;
 println "docsDirName:"+docsDirName;
 println "docsDir:"+docsDir;
 
 println "dependencyCacheDirName:"+dependencyCacheDirName;
 println "dependencyCacheDir:"+dependencyCacheDir;
 
 println "sourceSets:"+sourceSets
 println "sourceCompatibility:"+sourceCompatibility
 println "targetCompatibility:"+targetCompatibility
 println "archivesBaseName:"+archivesBaseName
 
 println "sourceSets.main:"+sourceSets['main']
 sourceSets.all {
	 println name
 }
 println "sourceSets.main:"+sourceSets['main'].name
 println "sourceSets.main.output="+sourceSets['main'].output
 println "sourceSets.main.output.classesDir="+sourceSets.main.output.classesDir
 println "sourceSets.main.output.resourcesDir="+sourceSets.main.output.resourcesDir
 
 println "sourceSets.main.compileClasspath="+sourceSets.main.compileClasspath
 println "sourceSets.main.runtimeClasspath="+sourceSets.main.runtimeClasspath
 println "sourceSets.main.java="+sourceSets.main.java
 println "sourceSets.main.java.srcDirs="+sourceSets.main.java.srcDirs
 
 println "sourceSets.main.resources="+sourceSets.main.resources
 
 
 println "sourceSets.main.resources.srcDirs="+sourceSets.main.resources.srcDirs
 
 println "sourceSets.main.allJava="+sourceSets.main.allJava
 println "sourceSets.main.allSource="+sourceSets.main.allSource
 sourceSets {
	 intTest
 }
 dependencies {
	 intTestCompile 'junit:junit:4.11'
	 intTestRuntime 'org.ow2.asm:asm-all:4.0'
 }
 task intTestJar(type: Jar) {
	 println "sourceSets.intTest.output="+sourceSets.intTest.output
	 from sourceSets.intTest.output
 }
 
 
 println "webAppDirName:"+webAppDirName;
 println "webAppDir:"+webAppDir;
 
 println "eclipse.project.name="+eclipse.project.name;
 println "eclipse.project.comment ="+eclipse.project.comment ;
 println "eclipse.project.buildCommands="+eclipse.project.buildCommands;
 println "eclipse.project.file="+eclipse.project.file ;
 println "project.linkedResources="+eclipse.project.linkedResources ;
 println "eclipse.project.natures="+eclipse.project.natures ;
 
 println "eclipse.classpath.containers="+eclipse.classpath.containers ;
 println "eclipse.classpath.defaultOutputDir="+eclipse.classpath.defaultOutputDir ;
 println "eclipse.classpath.downloadJavadoc="+eclipse.classpath.downloadJavadoc ;
 println "eclipse.classpath.downloadSources="+eclipse.classpath.downloadSources ;
 println "eclipse.classpath.file="+eclipse.classpath.file ;
 
 println "eclipse.classpath.minusConfigurations="+eclipse.classpath.minusConfigurations ;
 println "eclipse.classpath.plusConfigurations="+eclipse.classpath.plusConfigurations ;
 
 println "eclipse.wtp.component.classesDeployPath="+eclipse.wtp.component.classesDeployPath ;
 println "eclipse.wtp.component.contextPath="+eclipse.wtp.component.contextPath;
 println "eclipse.wtp.component.deployName="+eclipse.wtp.component.deployName;
 println "eclipse.wtp.component.file="+eclipse.wtp.component.file;
 println "eclipse.wtp.component.libConfigurations="+eclipse.wtp.component.libConfigurations;
 println "eclipse.wtp.component.libDeployPath="+eclipse.wtp.component.libDeployPath;
 println "eclipse.wtp.component.minusConfigurations="+eclipse.wtp.component.minusConfigurations;
 println "eclipse.wtp.component.properties="+eclipse.wtp.component.properties;
 println "eclipse.wtp.component.resources="+eclipse.wtp.component.resources;
 println "eclipse.wtp.component.rootConfigurations="+eclipse.wtp.component.rootConfigurations;
 println "eclipse.wtp.component.sourceDirs="+eclipse.wtp.component.sourceDirs;
  */
 
 
