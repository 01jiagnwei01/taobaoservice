<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd">
<!-- 
参考文档：
http://www.javacodegeeks.com/2014/02/spring-jms-processing-messages-within-transactions.html?utm_source=tuicool
https://github.com/xpadro/spring-integration/tree/master/jms-tx
http://activemq.apache.org/redelivery-policy.html
http://docs.spring.io/spring/docs/3.0.x/spring-framework-reference/html/jms.html
 -->

	<!-- Infrastructure -->
	<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
	<!-- 
	<property name="brokerURL" value="vm://embedded?broker.persistent=false"/>
	 -->
		<property name="brokerURL" value="tcp://localhost:61616"/>
		<property name="redeliveryPolicy">
			<bean class="org.apache.activemq.RedeliveryPolicy">
			<!-- 
			<property name="collisionAvoidanceFactor" value="0.5"/>
			 -->
				
				<property name="maximumRedeliveries" value="0"/><!-- 重复次数 -->
				<property name="maximumRedeliveryDelay" value="-1"/>
				<property name="initialRedeliveryDelay" value="10"/>
				<property name="redeliveryDelay" value="1000"/>
				<property name="useCollisionAvoidance" value="false"/>
				<property name="useExponentialBackOff" value="false"/>
				<property name="backOffMultiplier" value="2"/>
			</bean>
		</property>
	</bean>
	
	<bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory" ref="connectionFactory"/>
	</bean>
	 <!-- 
	 <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="maxConnections" value="10"/>
    </bean> -->
	
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="sessionTransacted" value="true"/>
        <property name="receiveTimeout" value="5000"/>
    </bean>
    
	
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="queue"/>
    </bean>
	
	 <!-- 定义消费者开始 -->
     <!-- 消息监听器 -->
    <bean id="consumerMessageListener" class="com.gxkj.taobaoservice.jms.ConsumerMessageListener"/>    
    <!-- 消息监听容器 -->
    <bean id="jmsContainer"        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory" />
        <property name="destination" ref="queueDestination" /><!-- 定义要消费的通道 -->
        <property name="messageListener" ref="consumerMessageListener" /><!-- 定义使用的监听器 -->
        <property name="sessionTransacted" value="false"/>  <!-- 代码里加事务，自己实现事务逻辑。 -->
        <!-- -->
        <property name="transactionManager" ref="transactionManager"/>  <!-- 事务管理器 -->
        <property  name = "maxConcurrentConsumers"  value = "10"/>
    </bean>
<!-- 定义消费者结束 -->
	
 
	
 
	
	 
	 
</beans>